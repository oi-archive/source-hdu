{"title":"DNA Assembly","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=1583","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=1583&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=1583","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=1583"},"statement":[{"title":"Problem Description","content":"Farmer John has performed DNA sequencing on his prize milk-producing cow, Bessie DNA sequences are ordered lists (strings) containing the letters &apos;A&apos;, &apos;C&apos;, &apos;G&apos;, and &apos;T&apos;. <br><br>As is usual for DNA sequencing, the results are a set of strings that are sequenced fragments of DNA, not entire DNA strings. A pair of strings like &apos;GATTA&apos; and &apos;TACA&apos; most probably represent the string &apos;GATTACA&apos; as the overlapping characters are merged, since they were probably duplicated in the sequencing process. <br><br>Merging a pair of strings requires finding the greatest overlap between the two and then eliminating it as the two strings are concatenated together. Overlaps are between the end of one string and beginning of another string, NOT IN THE MIDDLE OF A STRING. <br><br>By way of example, the strings &apos;GATTACA&apos; and &apos;TTACA&apos; overlap completely. On the other hand, the strings &apos;GATTACA&apos; and &apos;TTA&apos; have no overlap at all, since the matching characters of one appear in the middle of the other, not at one end or the other. Here are some examples of merging strings, including those with no overlap: <br><br><br><br>&#xA0;&#xA0;GATTA + TACA -&gt; GATTACA<br>&#xA0;&#xA0;TACA + GATTA -&gt; TACAGATTA<br>&#xA0;&#xA0;TACA + ACA -&gt; TACA<br>&#xA0;&#xA0;TAC + TACA -&gt; TACA<br>&#xA0;&#xA0;ATAC + TACA -&gt; ATACA<br>&#xA0;&#xA0;TACA + ACAT -&gt; TACAT<br>Given a set of N (2 &lt;= N &lt;= 7) DNA sequences all of whose lengths are in the range 1..7, find and print length of the shortest possible sequence obtainable by repeatedly merging all N strings using the procedure described above. All strings must be merged into the resulting sequence.","type":"description","format":"html"},{"title":"Input","content":"The input consists of multiple test cases. <br>Each test case :<br>Line 1: A single integer N <br><br>Lines 2..N+1: Each line contains a single DNA subsequence<br>End of file.","type":"input_format","format":"html"},{"title":"Output","content":"For each pair of input output the length of the shortest possible string obtained by merging the subsequences. It is always possible &#x2013; and required &#x2013; to merge all the input strings to obtain this string.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">4\nGATTA\nTAGG\nATCGA\nCGCAT</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">13\n\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>Hint</div><i style=\"font-size:1px\"> </i>\nExplanation of the sample: \n\nSuch string is &quot;CGCATCGATTAGG&quot;.</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=%B6%AC%C1%B7%C8%FD%BE%C5%D6%AE%B6%FE&amp;source=1&amp;searchmode=source\"> &#x51AC;&#x7EC3;&#x4E09;&#x4E5D;&#x4E4B;&#x4E8C; </a> ","type":"source","format":"html"}]}