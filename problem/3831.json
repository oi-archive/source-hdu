{"title":"DICS","time_limit":5000,"memory_limit":64,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=3831","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=3831&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=3831","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=3831"},"statement":[{"title":"Problem Description","content":"I think all of you must be skilled in the classic problem Levenshtein Distance , which is more commonly known as Edit Distance. For more historic knowledge and basic concepts, see <a href=\"http://en.wikipedia.org/wiki/Levenshtein_distance\" .>http://en.wikipedia.org/wiki/Levenshtein_distance .</a><br>This time, we are involved in a more complicated one: given two strings SOURCE and DESTINATION , we have 4 operations<br><strong>Delete</strong>: remove the ith character.<br><strong>Insert</strong>: in pos i(the ith character in the first string),you can insert a character, any one as you like. <br><strong>Change</strong>: in pos i,you can change that original character to any other character(of course you won&apos;t change it to itself).<br><strong>Suffix change</strong>: which means you can change all characters to an identical character, from the ith pos to the end. For instance: abcdefg, you can make this operation in character b,maybe you can use d and the result is adddddd, or if you use e the result is aeeeeee or if you use this operation in character c with character f,the result is abfffff.<br>With the help of Suffix change, sometimes the edit distance can be greatly shortened. See the following example<br><br>abcdefg<br>ccccccg<br><br>You can first replace every character from the beginning to the end with c,and the first string will be ccccccc,then change the last character c to g. In such way,we can see the edit distance is 2. <br><br>","type":"description","format":"html"},{"title":"Input","content":"Input consists of several test cases, each case contains two line,the first line will show you the SOURCE string, the second line provide the DESTINATION string. You should write a program to caculate the minimum number of operations(delete, insert, changes, suffix change as I mentioned before) of transforming the SOURCE to DESTINATION. You can assume none of string in any case will be longer than &quot;500&quot;. Input ends with a line consists of a &apos;#&apos;.<br>PAY ATTENTION:Both strings consist of either lower or upper letters,in other word in each position there is 52 possibilities.There will be at most 15 test cases.<br><br>","type":"input_format","format":"html"},{"title":"Output","content":"One line for each case,the edit distance. Output nothing for the &quot;#&quot;.<br>","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">abcdefg\naaaaaaa\n#</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">1</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2011+Multi-University+Training+Contest+1+-+Host+by+HNU&amp;source=1&amp;searchmode=source\"> 2011 Multi-University Training Contest 1 - Host by HNU </a> ","type":"source","format":"html"}]}