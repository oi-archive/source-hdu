{"title":"Joint Stacks","time_limit":4000,"memory_limit":64,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5818","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5818&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5818","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5818"},"statement":[{"title":"Problem Description","content":"A stack is a data structure in which all insertions and deletions of entries are made at one end, called the &quot;top&quot; of the stack. The last entry which is inserted is the first one that will be removed. In another word, the operations perform in a Last-In-First-Out (LIFO) manner.<br>A mergeable stack is a stack with &quot;merge&quot; operation. There are three kinds of operation as follows:<br><br>- push A x: insert x into stack A<br>- pop A: remove the top element of stack A<br>- merge A B: merge stack A and B<br><br>After an operation &quot;merge A B&quot;, stack A will obtain all elements that A and B contained before, and B will become empty. The elements in the new stack are rearranged according to the time when they were pushed, just like repeating their &quot;push&quot; operations in one stack. See the sample input/output for further explanation.<br>Given two mergeable stacks A and B, implement operations mentioned above.<br>","type":"description","format":"html"},{"title":"Input","content":"There are multiple test cases. For each case, the first line contains an integer $N (0 &lt; N \\leq 10^5)$, indicating the number of operations. The next N lines, each contain an instruction &quot;push&quot;, &quot;pop&quot; or &quot;merge&quot;. The elements of stacks are 32-bit integers. Both A and B are empty initially, and it is guaranteed that &quot;pop&quot; operation would not be performed to an empty stack. N = 0 indicates the end of input.","type":"input_format","format":"html"},{"title":"Output","content":"For each case, print a line &quot;Case #t:&quot;, where t is the case number (starting from 1). For each &quot;pop&quot; operation, output the element that is popped, in a single line.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">4\npush A 1\npush A 2\npop A\npop A\n9\npush A 0\npush A 1\npush B 3\npop A\npush A 2\nmerge A B\npop A\npop A\npop A\n9\npush A 0\npush A 1\npush B 3\npop A\npush A 2\nmerge B A\npop B\npop B\npop B \n0</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case #1:\n2\n1\nCase #2:\n1\n2\n3\n0\nCase #3:\n1\n2\n3\n0</div></pre>","type":"example","format":"html"},{"title":"Author","content":"SYSU","type":"source","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2016+Multi-University+Training+Contest+7&amp;source=1&amp;searchmode=source\"> 2016 Multi-University Training Contest 7 </a> ","type":"source","format":"html"}]}