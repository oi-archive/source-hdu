{"title":"Meta-Loopless Sorts","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=1617","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=1617&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=1617","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=1617"},"statement":[{"title":"Problem Description","content":"Sorting holds an important place in computer science. Analyzing and implementing various sorting algorithms forms an important part of the education of most computer scientists, and sorting accounts for a significant percentage of the world&apos;s computational resources. Sorting algorithms range from the bewilderingly popular Bubble sort, to Quicksort, to parallel sorting algorithms and sorting networks. In this problem you will be writing a program that creates a sorting program (a meta-sorter). <br><br>The problem is to create several programs whose output is a standard Pascal program that sorts n numbers where n is the only input to the program you will write. The Pascal programs generated by your program must have the following properties: <br><br>They must begin with program sort(input,output); <br><br>They must declare storage for exactly n integer variables. The names of the variables must come from the first n letters of the alphabet (a,b,c,d,e,f). <br><br>A single readln statement must read in values for all the integer variables. <br><br>Other than writeln statements, the only statements in the program are if then else statements. The boolean conditional for each if statement must consist of one strict inequality (either &lt; or &gt;) of two integer variables. <br><br>Exactly n! writeln statements must appear in the program. <br><br>Exactly three semi-colons must appear in the programs <br><br>1.after the program header: program sort(input,output); <br><br>2.after the variable declaration: ...: integer; <br><br>3.after the readln statement: readln(...); <br><br>No redundant comparisons of integer variables should be made. For example, during program execution, once it is determined that a &lt; b, variables a and b should not be compared again. <br><br>Every writeln statement must appear on a line by itself. <br><br>The programs must compile. Executing the program with input consisting of any arrangement of any n distinct integer values should result in the input values being printed in sorted order. <br>For those unfamiliar with Pascal syntax, the example at the end of this problem completely defines the small subset of Pascal needed. <br><br>","type":"description","format":"html"},{"title":"Input","content":"The input consist on a number in the first line indicating the number M of programs to make, followed by a blank line. Then there are M test cases, each one consisting on a single integer n on a line by itself with 1 &#x2264; n &#x2264;8. There will be a blank line between test cases. ","type":"input_format","format":"html"},{"title":"Output","content":"The output is M compilable standard Pascal programs meeting the criteria specified above. Print a blank line between two consecutive programs. ","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">1\n\n3</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">program sort(input,output);\nvar\na,b,c : integer;\nbegin\n  readln(a,b,c);\n  if a &lt; b then\n    if b &lt; c then\n      writeln(a,b,c)\n    else if a &lt; c then\n      writeln(a,c,b)\n    else\n      writeln(c,a,b)\n  else\n    if a &lt; c then\n      writeln(b,a,c)\n    else if b &lt; c then\n      writeln(b,c,a)\n    else\n      writeln(c,b,a)\nend.</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=UVA&amp;source=1&amp;searchmode=source\"> UVA </a> ","type":"source","format":"html"}]}