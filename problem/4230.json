{"title":"Robot Navigation ","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=4230","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=4230&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=4230","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=4230"},"statement":[{"title":"Problem Description","content":"A robot has been sent to explore a remote planet. To specify a path the robot should take, a program is sent each day. The program consists of a sequence of the following commands:<br>FORWARD X: move forward by X units.<br>TURN LEFT: turn left (in place) by 90 degrees.<br>TURN RIGHT: turn right (in place) by 90 degrees.<br>The robot also has sensor units which allow it to obtain a map of its surrounding area. The map is represented as a grid. Some grid points contain hazards (e.g. craters) and the program must avoid these points or risk losing the robot.<br>Naturally, if the initial location of the robot, the direction it is facing, and its destination position are known, it is best to send the shortest program (one consisting of the fewest commands) to move the robot to its destination (we do not care which direction it faces at the destination). You are more interested in knowing the number of different shortest programs that can move the robot to its destination. However, the number of shortest programs can be very large, so you are satisfied to compute the number as a remainder modulo 1,000,000.","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"There will be several test cases in the input. Each test case will begin with a line with two integers<br>N M<br>Where N is the number of rows in the grid, and M is the number of columns in the grid (2 &#x2264; N, M &#x2264; 100). The next N lines of input will have M characters each. The characters will be one of the following:<br>&#x2018;.&#x2019; Indicating a navigable grid point.<br>&#x2018;*&#x2019; Indicating a crater (i.e. a non-navigable grid point).<br>&#x2018;X&#x2019; Indicating the target grid point. There will be exactly one &#x2018;X&#x2019;.<br>&#x2018;N&#x2019;, &#x2018;E&#x2019;, &#x2018;S&#x2019;, or &#x2018;W&#x2019; Indicating the starting point and initial heading of the robot. There will be exactly one of these. Note that the directions mirror compass directions on a map: N is North (toward the top of the grid), E is East (toward the right of the grid), S is South (toward the bottom of the grid) and W is West (toward the left of the grid).<br>There will be no spaces and no other characters in the description of the map. The input will end with a line with two 0s.","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each test case, output two integers on a single line, with a single space between them. The first is the length of a shortest possible program to navigate the robot from its starting point to the target, and the second is the number of different programs of that length which will get the robot to the target (modulo 1,000,000). If there is no path from the robot to the target, output two zeros separated by a single space. Output no extra spaces, and do not separate answers with blank lines.","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">5 6\n*....X\n.....*\n.....*\n.....*\nN....*\n6 5\n....X\n.****\n.****\n.****\n.****\nN****\n3 3\n.E.\n***\n.X.\n0 0</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">6 4\n3 1\n0 0</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=SER2011&amp;source=1&amp;searchmode=source\"> SER2011 </a> ","type":"source","format":"html","require":["katex"]}]}