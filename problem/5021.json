{"title":"Revenge of kNN II","time_limit":5000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5021","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5021&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5021","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5021"},"statement":[{"title":"Problem Description","content":"In pattern recognition, the k-Nearest Neighbors algorithm (or k-NN for short) is a non-parametric method used for classification and regression. In both cases, the input consists of the k closest training examples in the feature space.<br>In k-NN regression, the output is the property value for the object. This value is the average of the values of its k nearest neighbors.<br>---Wikipedia<br><br>Today, kNN takes revenge on you, again. You have to handle a kNN case in one-dimensional coordinate system. There are N points with a position Xi and value Vi. Then there are M kNN queries for point with index i, recalculate its value by averaging the values its k-Nearest Neighbors. Note you have to replace the value of i-th point with the new calculated value. And if there is a tie while choosing k-Nearest Neighbor, choose the one with the minimal index first.<br>(Have you ever tried the problem &#x201C;Revenge of kNN&#x201D;? They are twin problems!)","type":"description","format":"html"},{"title":"Input","content":"The first line contains a single integer T, indicating the number of test cases. <br><br>Each test case begins with two integers N and M. Then N lines follows, each line contains two integers Xi and Vi. Then M lines with the queried index Qi and Ki follows, in which Ki indicating the number of k-Nearest Neighbors<br><br>[Technical Specification]<br>1. 1 &lt;= T &lt;= 5<br>2. 2 &lt;= N &lt;= 100 000<br>3. 1 &lt;= M &lt;= 100 000<br>4. 1 &lt;= Vi &lt;= 1 000<br>5. 1 &lt;= Xi &lt;= 1 000 000 000, and no two Xi are identical.<br>6. 1 &lt;= Qi &lt;= N<br>7. 1 &lt;= Ki &lt;= N - 1","type":"input_format","format":"html"},{"title":"Output","content":"For each test case, output sum of all queries rounded to three fractional digits.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">1\n5 3\n1 2\n2 3\n3 6\n4 8\n5 8\n2 2\n3 2\n4 2</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">17.000\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>For the first query, the 2-NN for point 2 is point 1 and 3, so the new value is (2 + 6) / 2 = 4.\nFor the second query, the 2-NN for point 3 is point 2 and 4, and the value of point 2 is changed to 4 by the last query, so the new value is (4 + 8) / 2 = 6.\n\nHuge input, faster I/O method is recommended.</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=BestCoder+Round+%2310&amp;source=1&amp;searchmode=source\"> BestCoder Round #10 </a> ","type":"source","format":"html"}]}