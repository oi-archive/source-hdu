{"title":"Insertion Sort","time_limit":1000,"memory_limit":256,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=6450","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=6450&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=6450","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=6450"},"statement":[{"title":"Problem Description","content":"Insertion sort is a simple sorting algorithm that builds the final sorted array one item at an iteration.<br><br>More precisely, insertion sort iterates, consuming one input element each repetition, and growing a sorted output list.<br>At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list, and inserts it there.<br>It repeats until no input elements remain.<br><br>This type of sorting is typically done in-place, by iterating up the array, growing the sorted array behind it.<br>At each array-position, it checks the value there against the largest value in the sorted array (which happens to be next to it, in the previous array-position checked).<br>If larger, it leaves the element in place and moves to the next.<br>If smaller, it finds the correct position within the sorted array, shifts all the larger values up to make a space, and inserts into that correct position.<br><br>The resulting array after $k$ iterations has the property where the first $k$ entries are sorted.<br>In each iteration the first remaining entry of the input is removed, and inserted into the result at the correct position, thus extending the result.<br><br>Knuth is an ACM-ICPC master and provides a modified pseudocode implementation about the insertion sort for you.<br>His modified algorithm for an array of sortable items $A$ ($1$-based array) can be expressed as:<br><br><center><img style=\"max-width:100%;\" src=\"../../../data/images/C755-1003-1.jpg\"></center><br><br>Given the parameter $k$, you are asked to count the number of distinct permutations of $1$ to $n$ meeting the condition that, after his modified insertion sort, each permutation would become an almost sorted permutation.<br>Here he notes that a permutation of $1$ to $n$ is almost sorted if the length of its longest increasing subsequence is at least $(n - 1)$.<br>","type":"description","format":"html"},{"title":"Input","content":"The input contains several test cases, and the first line contains a positive integer $T$ indicating the number of test cases which is up to $5000$.<br><br>For each test case, the only line contains three integers $n, k$ and $q$ indicating the length of the permutations, the parameter in his implementation and a prime number required for the output respectively, where $1 \\leq n, k \\leq 50$ and $10^8 \\leq q \\leq 10^9$.","type":"input_format","format":"html"},{"title":"Output","content":"For each test case, output a line containing &quot;Case #x: y&quot; (without quotes), where $x$ is the test case number starting from $1$, and $y$ is the remainder of the number of permutations which meet the requirement divided by $q$.<br>","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">4\n4 1 998244353\n4 2 998244353\n4 3 998244353\n4 4 998244353</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case #1: 10\nCase #2: 14\nCase #3: 24\nCase #4: 24\n\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>\nIn the first sample case, we can discover 10 permutations which meet the condition, and they are listed as follows:\n[1, 2, 3, 4]\n[1, 2, 4, 3]\n[1, 3, 2, 4]\n[1, 3, 4, 2]\n[1, 4, 2, 3]\n[2, 1, 3, 4]\n[2, 3, 1, 4]\n[2, 3, 4, 1]\n[3, 1, 2, 4]\n[4, 1, 2, 3]\n\n</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=The+43rd+ACM+International+Collegiate+Programming+Contest+Asia+Shenyang+Regional+Contest&amp;source=1&amp;searchmode=source\"> The 43rd ACM International Collegiate Programming Contest Asia Shenyang Regional Contest </a> ","type":"source","format":"html"}]}