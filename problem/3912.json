{"title":"Turn Right","time_limit":2000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=3912","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=3912&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=3912","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=3912"},"statement":[{"title":"Problem Description","content":"This summer, ELT and his classmates went to Beijing for a training of coding. ELT have never been to Beijing before, so at the weekend, he together with some friends went to the National Museum, it&apos;s free for students!<br><br>&#xA0;&#xA0;The National Museum consists of many parts. One part of it is an exhibition of Ancient China From Xia Dynasty to Qing Dynasty, it needs a big room to show all the things. What&apos;s more, there exist many walls to hang pictures. The boundary of this room is walls except the entrance and exit.<br><br>&#xA0;&#xA0;With walls, an entrance and an exit, this room can be regarded as a maze. To make it simple, this room is a R*C grid, wall is constructed at some edges of grid. The entrance is always at the first row, and the exit is always at the last row, just like the picture below.<br><center><img style=\"max-width:100%;\" src=\"../../data/images/C362-1002-1.jpg\"></center> <br>ELT can&apos;t remember his direction in maze, but he is a clever boy. He knew an algorithm called &quot;Always Turn Right&quot;, it&apos;s procedure is as follows: at any grid of this room, if we can turn right(no wall at right side), then we must turn right; if we can&apos;t turn right but can go straight forward, then we must go forward; if we can&apos;t go forward but can turn left, then we must turn left; if we can&apos;t even turn left, we just turn backward. In the picture above, if we use this algorithm, we&apos;ll visit these grids in order: Entrance --&gt; (0, 1) --&gt; (0, 0) --&gt; (0, 1) --&gt; (0, 2) --&gt; (1, 2) --&gt; (1, 1) --&gt; (1, 0) --&gt; (2, 0) --&gt; (1, 0) --&gt; (1, 1) --&gt; (2, 1) --&gt; (2, 2) --&gt; Exit. Very easy, doesn&apos;t it?<br><br>&#xA0;&#xA0;ELT uses &quot;Always Turn Right&quot; algorithm to visit this room from entrance to exit, and then from exit to entrance. He wants to know whether he walked all grids in the room. Now ELT is dizzy because the maze is too big, can you help him?","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"First line is an integer T, means T test cases. In each test case, the first line has four numbers: R, C, Ent_Column, Exit_Column. Ent_Column is the column number of entrance; Exit_Column is the column number of exit.<br>Then following 2*R-1 lines, 2*i line have C-1 numbers, the j-th number shows whether there is a wall between grid(i, j) and grid(i, j+1), 2*i+1 line have C numbers, the j-th number shows whether there is a wall between grid(i, j) and grid(i+1, j). Number 1 represents a wall, 0 represents no wall.<br>&#xA0;&#xA0;We guarantee that there exists a path from entrance to exit.<br>2 &lt;= R, C &lt;= 500<br>0 &lt;= Ent_Column, Exit_Column &lt; C","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"If ELT can walk all grids in the room, print one line &quot;YES&quot;, otherwise, print one line &quot;NO&quot;.","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">1\n3 4 1 2\n0 0 0\n1 1 0 1\n0 0 0\n0 0 0 0\n1 0 0</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">YES</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2011+Multi-University+Training+Contest+8+-+Host+by+HUST&amp;source=1&amp;searchmode=source\"> 2011 Multi-University Training Contest 8 - Host by HUST </a> ","type":"source","format":"html","require":["katex"]}]}