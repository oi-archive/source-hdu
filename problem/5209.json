{"title":"Magic Toy Brick","time_limit":4000,"memory_limit":64,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5209","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5209&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5209","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5209"},"statement":[{"title":"Problem Description","content":"Today is Young F&apos;s 3rd birthday. His father gives him a set of magic toy bricks as a birthday gift, which contains a total of $n$ bricks identified from $1$ to $n$. Young F can set the height of every brick as an arbitrary integer $h$, which ranges from 1 to m$\\left(1\\leq h\\leq m \\right)$. Young F loves the gift, and then he has fun with the bricks according to the following steps.<br><br>(1)step 1: take the No.1 toy brick, set its height $h1$ arbitrarily, place it at the beginning of the first row.<br><br>(2)step $i$ (assuming there has been $r$ rows formed by the previous $i-1$ toy bricks):take the No.i toy brick, and there are two operations which Young F can take:<br><br>(I) set its height $hi$ arbitrarily, place No.i toy brick at the beginning of the $r+1$ row to create a new row(row $r+1$)<br><br>(II)select an arbitrary row from the existed $r$ rows, set the height of new brick $hi$ so that $hi$ must be not less than the height of the last toy brick of selected row, then append No.i toy block to the selected row.<br><br>(3) operation ends when $n$ toy blocks are used out, and the whole bricks can form a certain shape.<br><br>Young F is curious about how many different shapes will be formed with the whole bricks in all possible operations.<br><br>For two shapes, if the number of the rows is same, and the number of the bricks in corresponding row is also same, and the ID as well as the height of the brick at the corresponding position is still same, the two shapes are considered as the same shape.","type":"description","format":"html"},{"title":"Input","content":"Multiple test cases, the first line contains an integer $T$(no more than $50$), indicating the number of cases.Each test case contains two integer $n\\left(1\\leq n\\leq 1000 \\right)$ and $m\\left(1\\leq m\\leq 100000 \\right)$, representing the number of bricks and the maximal height of toy bricks.","type":"input_format","format":"html"},{"title":"Output","content":"For each case&#xFF0C;the output should occupies exactly one line. The output format is Case #$x$: $ans$, here $x$ is the data number begins at 1, $ans$ is the total number mod $1000000007$.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n1 1\n2 2</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case #1: 1\nCase #2: 7\n\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>there are seven shapes in the second test case.$(x,y)$ indicates\nthat No.$x$&apos;s height is $y$.\n1&#x3001;(1,1)(2,1)\n\n2&#x3001;(1,1)(2,2)\n\n3&#x3001;(1,2)(2,2)\t\n\n4&#x3001;(1,1)  \n   (2,1)  \n\n5&#x3001;(1,1) \n   (2,2)\n\n6&#x3001;(1,2)\n   (2,1)\n\n7&#x3001;(1,2)\n   (2,2)\n</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=BestCoder+Round+%2338+%28%24%29&amp;source=1&amp;searchmode=source\"> BestCoder Round #38 ($) </a> ","type":"source","format":"html"}]}