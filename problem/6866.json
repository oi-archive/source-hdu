{"title":"Linuber File System","time_limit":2000,"memory_limit":512,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=6866","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=6866&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=6866","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=6866"},"statement":[{"title":"Problem Description","content":"<b>It is preferrable to read the pdf statment.</b><br><br>The Linuber File System, which is designed by Cuber QQ, has a sophisticated privilege management system. Specifically, each file is associated with a confidential score (an integer), and only users with access level greater than or equal to the confidential score of the file can access that file.<br><br>LFS also organizes files in a directed tree, like normal file systems (e.g., NTFS, Ext4 and APFS) do. One subtle difference is that, in LFS, everything is file. Some files are linked with some other files as its \\textit{subfiles}, but they are considered as files instead of directories as they are associated with data on their own.<br><br>One advantage of using LFS is that, it has a really flexible management of privileges. For example, when a file becomes more or less confidential, one can increase/decrease its confidential score. At the same time, the confidential scores of its subfiles, sub-subfiles and so on will be updated accordingly. This can be thought of as an advantage, or a side effect, depending on your need. A mathematical model is, given a directed tree, you can pick any node $u$ on the tree, and add $x$ (positive or negative, possibly zero) to the values for each node in the subtree of $u$.<br><br>Given a LFS with confidential scores at $0$ for all files, you are asked to perform the above operation as few times as possible, to make sure the confidential score of file $i$ lies in the interval $[l_i, r_i]$ for all $1 \\le i \\le n$, where $n$ is the number of files in this system. In other words, the file $i$ should not be accessible to users with access level lower than $l_i$, but people with level at least $r_i$ will have their access guaranteed.<br>","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"The very first line contains an integer $T$ ($1 \\le T \\le 10$), denoting the number of test cases.<br><br>Each test case begins with a single integer $n$ ($2 \\le n \\le 2~000$), denoting the number of files.<br><br>In the next $n - 1$ lines, each line contains two space-separated integers $u_i, v_i$ ($1 \\le u_i, v_i \\le n$), denoting the endpoints of each linkage. It is not clear whether $u_i$ is a subfile of $v_i$ or $v_i$ is a subfile of $u_i$. You should infer that on your own, as <b>it is known that $1$ is the root file, i.e., file with no parent file.</b><br><br>In the next $n$ lines, each line contains two space-separated integers $l_i, r_i$ ($-10^9 \\le l_i \\le r_i \\le 10^9$), denoting the required confidential score interval for file $i$.<br>","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each test case, print a single line containing an integer, which is the answer.","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n3\n1 2\n1 3\n-2 -1\n-3 -2\n-1 -1\n6\n1 5\n2 4\n2 1\n1 3\n3 6\n-2 4\n-3 2\n4 5\n2 2\n-5 -1\n-1 4</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n3</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2020+Multi-University+Training+Contest+8&amp;source=1&amp;searchmode=source\"> 2020 Multi-University Training Contest 8 </a> ","type":"source","format":"html","require":["katex"]}]}