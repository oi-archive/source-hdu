{"title":"Manipulating the Power Square","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=2598","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=2598&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=2598","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=2598"},"statement":[{"title":"Problem Description","content":"Rosalina finds Super Mario puzzling over the Power Square and gives him another hint on how to unlock its power. &#x201D;Keep swapping 0 with one of its neighbors! I&#x2019;ll tell you which neighbor,&#x201D; Rosalina says to Mario. Rosalina then gives Mario a sequence of directions on which neighbor to swap with 0.","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"Input is a description of of the Power Square, followed by a number of commands. The first line is the size of the Power Square n. You may assume n&lt;=100. The second line contains the n2 values in the Power Square, separated by spaces. Values start from the top left corner and move from left to right, moving down one row to the leftmost position when a row is filled.<br>Following the Power Square description are a number of commands, with each command on a separate line. Each command begins with the name of the command, followed by any additional command parameters.<br>There will no more than 100 commands.","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"The command &#x201D;SHOW&#x201D; causes the current state of the Power Square to be displayed in n &#xD7; n<br>form (each row of n values on a single line, separated by spaces), followed by a blank line.<br>The command &#x201D;MOVE&#x201D; is followed by one more more moves: &#x201D;up&#x201D;, &#x201D;down&#x201D;, &#x201D;left&#x201D;, or &#x201D;right&#x201D;.<br>Each move is executed as follows:<br>&#x2013; For &#x201D;up&#x201D;, swap 0 with its neighbor above.<br>&#x2013; For &#x201D;left&#x201D;, swap 0 with its left neighbor.<br>&#x2013; For &#x201D;right&#x201D;, swap 0 with its right neighbor.<br>&#x2013; For &#x201D;down&#x201D;, swap 0 with its neighbor below.<br>If move attempts to swap 0 with a non-existent neighbor, then output &#x201D;FAILED&#x201D; on a single line and stop attempting the remaining moves. If the move succeeds, &#x201D;MOVED&#x201D; is output on a single line. In either case, the state of the Power Square is changed to reflect the moves made.","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">3\n8 7 6 5 4 3 2 1 0\nSHOW\nMOVE up\nSHOW\n3\n8 7 6 5 4 3 2 1 0\nSHOW\nMOVE up right</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">8 7 6\n5 4 3\n2 1 0\n\nMOVED\n8 7 6\n5 4 0\n2 1 3\n\n8 7 6\n5 4 3\n2 1 0\n\nFAILED</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=HDU+2010-05+Programming+Contest+&amp;source=1&amp;searchmode=source\"> HDU 2010-05 Programming Contest  </a> ","type":"source","format":"html","require":["katex"]}]}