{"title":"Gates of Logic","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=1886","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=1886&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=1886","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=1886"},"statement":[{"title":"Problem Description","content":"The Department of Computer Science and Engineering runs courses dealing not only with algorithms but also with computer hardware. One such introductory course explains basic principles of integrated circuits (&#xFFFD;&#xFFFD;chips&#xFFFD;&#xFFFD;), binary logic, boolean algebra, etc. As you may know, the very basic units of logical circuits are called gates. A gate is an element performing one simple logical operation. It can be connected to other gates using lines. <br><br><center><img style=\"max-width:100%;\" src=\"../../../data/images/C106-1005-1.JPG\"></center><br><br>Logical circuits may be drawn as pictures with the gates represented as squares with inputs on the left and outputs on the right. In each square, there is a symbol that determines the gate type: Number 1 denotes an OR gate (its outputs are 0 if and only if there is no input with the value of 1), &amp; is an AND gate (outputs are 1 if and only if there is no 0 input), and = is a XOR gate (outputs are 1 if and only if there is an odd number inputs that have the value of 1). <br><br>Your task is to scan such a &#xFFFD;&#xFFFD;picture&#xFFFD;&#xFFFD; and compute values of all named circuit outputs. The lines may split and join again but you may assume that each &#xFFFD;&#xFFFD;value consumer&#xFFFD;&#xFFFD; (input port of a gate or a named output) will be connected to exactly one &#xFFFD;&#xFFFD;value source&#xFFFD;&#xFFFD; (output port of a gate or an input value). There will be no feedback loops, i.e., there exists no cycle that would lead through the same gate twice. ","type":"description","format":"html"},{"title":"Input","content":"The input contains several pictures. Each picture consists of at least one and at most 200 rows composed of the following characters: <br><br> <li>Space (&quot; &quot;). Empty space in the picture. Spaces are used to indent other characters to appropriate locations, because the exact position of characters is often important. Trailing spaces at the end of input rows may be present but may also be left out. </li><br><br><li>Dash (&quot;-&quot;). Horizontal line. It connects characters on its left and right together, those characters will always exist and be able to &quot;accept&quot; the connection.</li><br><br><li>Pipe (&quot;|&quot;). Vertical line, connects characters that are directly above and below. Like with the horizontal line, those characters will always accept the connection.</li><br><br><li>Plus sign (&quot;+&quot;). Line connection or a bend. Connects characters on all four sides. All characters that are able to accept the connection are considered connected (there will always be at least two). However, there may be sides that contain a non-empty character that is not connected. For example, if a dash is present on a position directly below the plus sign, they are not considered connected.</li><br><br><li>Lowercase letter x (&quot;x&quot;). Crossing of two lines without a connection. All four neighboring characters will accept the connection. The character above is connected to the one below and the character to the left with the one on the right, but there is no mutual connection between these two pairs.</li><br><br><li>Equal sign (&quot;=&quot;). Represents an input or output port. It always connects characters on its left and right, at least one of these characters is the port. If there is a port on the left, it may only be a value source. If there is a port on the right, it may only be a value consumer.</li><br><br><li>Lowercase letter o (&quot;o&quot;). Negation. There will always be a gate on the left and a port on the right of this character. It makes the particular gate output negated.</li><br><br><li>Hash mark (&quot;#&quot;). Gate, which has always a rectangular shape with two vertical and two horizontal sides. The left vertical side may be connected to input ports, the right side to output ports (possibly negated). No two gates will touch each other&#xFFFD;&#xFFFD;s side, which means that any two vertically or horizontally neighboring hash marks are always parts of the same gate.<br><br> The rectangle size will always be at least 3 characters in both directions, which means there is at least one character inside. All inner characters are empty (spaces), with exactly one exception. That single non-empty character denotes the gate type (note that it may have different meaning than outside the gate area) and will be a digit &quot;one&quot; (&quot;1&quot;), ampersand (&quot;&amp;&quot;), or an equal sign (&quot;=&quot;). </li><br><br><li>Binary digit (&quot;0&quot; and &quot;1&quot;). Input value of the circuit. It is connected to the character on its right, which is always an equal sign. </li><br><br><li>Uppercase letter (&quot;A&quot; through &quot;Z&quot;). Named output of the circuit. It accepts connection from its left, which is always an equal sign. Each letter will appear at most once, which means the number of circuit outputs is between 0 and 26, inclusive. </li><br><br>Each picture will be terminated by a row consisting solely of asterisk (&quot;*&quot;) characters (at least one). The last picture will be followed by two such rows. No row in the input will be longer than 200 characters. ","type":"input_format","format":"html"},{"title":"Output","content":"For each picture, print the values of all named outputs, sorted alphabetically. Each output row should contain three characters: output name (one uppercase letter), equals sign, and a binary value (zero or one). Print one empty line after each test case. <br>","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">     0=+\n       |\n       | #######\n       +=#     #\n         # &amp;   #o=--+\n1=------=#     #    |\n         #     #    | \n         #######    +--=### ###\n                    |   #=#=#1#o==X\n       1=-----------x--=# # ###\n               1=---x--=### \n                    +------------=Y\n***********************************\n1=A\n***\n*</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">X=0\nY=1\n\nA=1</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2008+%A1%B0Shun+Yu+Cup%A1%B1+Zhejiang+Collegiate+Programming+Contest+-+Warm+Up%A3%A82%A3%A9&amp;source=1&amp;searchmode=source\"> 2008 &#xFFFD;&#xFFFD;Shun Yu Cup&#xFFFD;&#xFFFD; Zhejiang Collegiate Programming Contest - Warm Up&#xFFFD;&#xFFFD;2&#xFFFD;&#xFFFD; </a> ","type":"source","format":"html"}]}