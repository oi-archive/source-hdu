{"title":"Vertex Cover","time_limit":1000,"memory_limit":250,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=6150","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=6150&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=6150","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=6150"},"statement":[{"title":"Problem Description","content":"As we know, $minimum vertex cover$ is a classical NP-complete problem. There will not be polynomial time algorithm for it unless $P = NP$.<br><br>You can see the definition of vertex cover in https://en.wikipedia.org/wiki/Vertex_cover.<br><br>Today, little M designs an &quot;approximate&quot; algorithm for vertex cover. It is a greedy algorithm. The main idea of her algorithm is that always choosing the maximum degree vertex into the solution set. The pseudo code of her algorithm is as follows:<br><br>We assume that the labels of the vertices are from 1 to n.<br><pre><br>for (int i = 1; i &lt;= n; ++i) {<br>&#xA0;&#xA0;use[i] = false;<br>    deg[i] = degree of the vertex i;<br>}<br>int ans = 0;<br>while (true) {<br>&#xA0;&#xA0;int mx = -1, u;<br>    for (int i = 1; i &lt;= n; ++i) {<br>    &#xA0;&#xA0;if (use[i])<br>        &#xA0;&#xA0;continue;<br>        if (deg[i] &gt;= mx) {<br>        &#xA0;&#xA0;mx = deg[i];<br>            u = i;<br>        }<br>    }<br>    if (mx &lt;= 0)<br>    &#xA0;&#xA0;break;<br>    ++ans;<br>    use[u] = true;<br>    for (each vertex v adjacent to u)<br>    &#xA0;&#xA0;--deg[v];<br>}<br>return ans;<br></pre><br><br>As a theory computer scientist, you immediately find that it is a bad algorithm. To show her that this algorithm dose not have a constant approximate factor, you need to construct an instance of vertex cover such that the solution get by this algorithm is much worse than the optimal solution.<br><br>Formally, your program need to output a simple undirected graph of at most $500$ vertices. Moreover, you need to output a vertex cover solution of your graph. Your program will get Accept if and only if the solution size get by the above algorithm is at least three times as much as yours. <br>","type":"description","format":"html"},{"title":"Input","content":"There is no input.<br>","type":"input_format","format":"html"},{"title":"Output","content":"First, output two integer $n$ and $m$ in a line, separated by a space, means the number of the vertices and the number of the edges in your graph.<br>In the next $m$ lines, you should output two integers $u$ and $v$ for each line, separated by a space, which denotes an edge of your graph. It must be satisfied that $1 \\leq u,v \\leq n$ and your graph is a simple undirected graph.<br>In the next line, output an integer $k(1 \\leq k \\leq n)$, means the size of your vertex cover solution.<br>Then output $k$ lines, each line contains an integer $u(1 \\leq u \\leq n)$ which denotes the label of a vertex in your solution. It must be satisfied that your solution is a vertex cover of your graph.<br>","type":"output_format","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">4 4\n1 2\n2 3\n3 4\n4 1\n2\n1\n3\n\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>\nThe sample output is just to exemplify the output format.\n</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2017%D6%D0%B9%FA%B4%F3%D1%A7%C9%FA%B3%CC%D0%F2%C9%E8%BC%C6%BE%BA%C8%FC+-+%CD%F8%C2%E7%D1%A1%B0%CE%C8%FC&amp;source=1&amp;searchmode=source\"> 2017&#x4E2D;&#x56FD;&#x5927;&#x5B66;&#x751F;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x7ADE;&#x8D5B; - &#x7F51;&#x7EDC;&#x9009;&#x62D4;&#x8D5B; </a> ","type":"source","format":"html"}]}