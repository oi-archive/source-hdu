{"title":"Typesetting","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=2718","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=2718&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=2718","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=2718"},"statement":[{"title":"Problem Description","content":"Modern fonts are generally of two varieties: outline fonts, whose glyphs (the individual character shapes) are specified mathematically as a set of curves, and bitmap fonts, whose glyphs are specified as patterns of pixels. Fonts may also include embedded information such as kerning pairs (adjusting the spacing between certain pairs of glyphs, such as &quot;AW&quot;, so that they appear spaced correctly), tracking hints (for managing inter-glyph spacing), antialiasing hints (smoothing of pixellated edges), and much more. To be sure, modern fonts are more than a simple collection of shapes, and displaying them properly is a common programming challenge.<br><br>For this problem we will concern ourselves with bitmapped fonts and a simple form of typesetting called glyph packing. Essentially, the idea is to pack the glyphs as tightly as possible while maintaining at least one horizontal pixel of separation between glyphs. For example, consider the glyphs shown to the left below for the Roman characters &quot;P&quot; and &quot;J&quot;. The figure to the right shows them after glyph packing. Note that they are as close as possible without touching horizontally.<br><br><img style=\"max-width:100%;\" src=\"../../data/images/C170-1001-1.png\"><br><br>Here&apos;s another example. In this case, notice that the final glyph cannot be packed at all. <br><br><img style=\"max-width:100%;\" src=\"../../data/images/C170-1001-2.png\"><br><br>After packing, pixels from distinct glyphs may be adjacent diagonally or vertically, but not horizontally. The following example shows that pixels may be adjacent diagonally. The &quot;Love&quot; test case in the example input section shows that they may be adjacent vertically.<br><br><img style=\"max-width:100%;\" src=\"../../data/images/C170-1001-3.png\"><br><br>Glyph packing has the nice property that it&apos;s easy to build &quot;fancy&quot; glyphs into the font so that glyph packing creates special effects with no extra work. Look at the &quot;Toy&quot; example below. The same simple packing process has been applied to these glyphs as to the ones above, but the result is more dramatic:<br><br><img style=\"max-width:100%;\" src=\"../../data/images/C170-1001-4.png\"><br><br>Glyph packing has a few caveats, however, one of which we must concern ourselves with for this problem. Consider the example on the left below where a glyph for a hyphen is followed by a glyph for an underscore. Based on our one horizontal pixel of separation rule, how would this pack? Clearly something more is needed, and that something more is hinting within the glyphs themselves. Recall that in actual practice, fonts contain kerning pairs, tracking hints, etc. For our purposes, our hinting will be limited to &quot;invisible&quot; pixels that count as a pixel for the purpose of packing, but not for display. The center image below represents invisible pixels as open dots instead of closed dots. Now the two glyphs can be properly packed, resulting in the output shown on the right.<br><br><img style=\"max-width:100%;\" src=\"../../data/images/C170-1001-5.png\"><br><br>Now for the formal definition of a proper packing: (1) Glyphs are packed as close as possible without allowing any pixels from different glyphs to be immediately horizontally adjacent; (2) Given two glyphs, they may not be packed in such a way that any pixel of the leftmost glyph at a given height ends up positioned to the right of any pixel at the same height in the rightmost glyph.<br><br>Condition (2) above is easily understood by visualizing two glyphs sitting side by side, separated by a small space. If you &quot;squeeze&quot; them together, condition (2) says that their pixels are not allowed to &quot;pass through&quot; one another. Consider the example to the left below. The center image is not the proper packing, because it violates condition (2) of the formal definition. The image on the right is the proper packing of these glyphs.<br><br><img style=\"max-width:100%;\" src=\"../../data/images/C170-1001-6.png\">","type":"description","format":"html"},{"title":"Input","content":"The input for this problem is sets of glyphs to be packed. In a given test case, all glyphs are the same height, and an integer, N, on the first line of the test case specifies this height. The next N lines contain the glyphs to be packed. Empty pixels in a glyph are represented by a dot &apos;.&apos; character. Non-empty pixels are represented by a hash mark &apos;#&apos; for visible pixels, and a zero &apos;0&apos; for invisible pixels. Glyphs are separated by a single column of space characters. The input will always consist of more than one glyph, at least one of which will always contain at least one visible pixel. A glyph will always have at least one non-empty pixel in its leftmost and rightmost column, and every glyph will have at least one non-empty pixel at the same height as at least one other glyph in the input. The minimum dimension of a glyph is 1 &#xD7; 1, the maximum dimension is 20 &#xD7; 20, and the maximum number of glyphs that will appear in any test case is 20. Test cases continue until a value of zero is specified for N.","type":"input_format","format":"html"},{"title":"Output","content":"For each test case, first output the number of that test case (starting with 1) on a line by itself. Then output the proper packing of the input glyphs, using the dot &apos;.&apos; character for empty pixels and for invisible pixels, and the hash mark &apos;#&apos; character for visible pixels. Omit leading and trailing empty columns (columns with no visible pixels) so that both the leftmost and rightmost output columns contain at least one visible pixel.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">8\n###. ...#\n#..# ...#\n#..# ...#\n###. ...#\n#... ...#\n#... ...#\n#... #..#\n#... ####\n8\n############# .... .............\n..#.......... .... .............\n..#.......... .##. .........#..#\n..#.......... #..# .........#..#\n..#.......... #..# .........#..#\n..#.......... .##. ..........###\n............. .... ............#\n............. .... ############.\n8\n############# .............\n..#.......... .............\n..#.......... .........#..#\n..#.......... .........#..#\n..#.......... .........#..#\n..#.......... ..........###\n............. ............#\n............. ############.\n5\n0..0 0..0\n0..0 0..0\n#### 0..0\n0..0 0..0\n0..0 ####\n5\n#.... .###.\n#.... #...#\n#...# #...#\n#...# ....#\n.###. ....#\n3\n### 0.0 ###\n#.# 0.0 #.#\n### 0.0 ###\n3\n0.0 ### 0.0\n0.0 #.# 0.0\n0.0 ### 0.0\n8\n#.... .... ..... ....\n#.... .... ..... ....\n#.... .##. #...# .##.\n#.... #..# .#.#. #..#\n#.... #..# .#.#. #..#\n#.... #..# .#.#. ###.\n#.... .##. ..#.. #...\n##### .... ..#.. .###\n0</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">1\n###..#\n#..#.#\n#..#.#\n###..#\n#....#\n#....#\n#.#..#\n#.####\n2\n#############\n..#..........\n..#..##..#..#\n..#.#..#.#..#\n..#.#..#.#..#\n..#..##...###\n............#\n############.\n3\n.....#############\n.......#..........\n.......#.#..#.....\n.......#.#..#.....\n.......#.#..#.....\n.......#..###.....\n............#.....\n############......\n4\n.........\n.........\n####.....\n.........\n.....####\n5\n#......###.\n#.....#...#\n#...#.#...#\n#...#.....#\n.###......#\n6\n###.....###\n#.#.....#.#\n###.....###\n7\n###\n#.#\n###\n8\n#..............\n#..............\n#..##.#...#.##.\n#.#..#.#.#.#..#\n#.#..#.#.#.#..#\n#.#..#.#.#.###.\n#..##...#..#...\n#####...#...###</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=Mid-Central+USA+2007&amp;source=1&amp;searchmode=source\"> Mid-Central USA 2007 </a> ","type":"source","format":"html"}]}