{"title":"Overlapping Squares","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=2937","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=2937&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=2937","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=2937"},"statement":[{"title":"Problem Description","content":"In most puzzles we are given some pieces and we have to make a target pattern which can be built in only one possible way. But some puzzles are a bit different, we are given a target pattern and from that target pattern we have to find in how many ways the pieces can be placed. Such a puzzle is the puzzle of overlapping squares. To understand this puzzle, look at the pictures below:<br><center><img style=\"max-width:100%;\" src=\"../../../data/images/C193-1009-1.JPG\">  </center><br><br>[tu pian]<br>In first figure we have placed a (2x2) filled square in a (4x4) grid. In the second figure we have placed another (2x2) filled square in the grid, which have of course deleted some part of the black lines of the previous square, in third picture we have placed a third square and in the fourth picture we have placed a fourth square. The picture can become even more complex if we place more (2x2) squares. Write a program to determine if it&apos;s possible to form a target image using at most six pieces of 2x2 squares.","type":"description","format":"html"},{"title":"Input","content":"The input consists of several test cases. Each test case is contained in five lines and each line contains nine characters. If the horizontal border of a filled square is visible it is denoted with &#x2018;_&#x2019; (ASCII value 95) sign and if vertical border of a filled square is visible then it is denoted with &#x2018;|&#x2019; (ASCII value 124) character. The board contains no other character than &#x2018;_&#x2019;, &#x2018;|&#x2019; and of course &#x2018; &#x2019; (ASCII Value 32). The border lines of the squares can only be along the grid lines. Each board lines end with a &#x2018;#&#x2019; (Hash character) which denotes the end of line. This character is not a part of the grid or square. The last test case is followed by a single zero, which should not be processed.","type":"input_format","format":"html"},{"title":"Output","content":"For each test case, print the case number and &apos;Yes&apos; or &apos;No&apos;, depending on whether it&apos;s possible to form the target.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">         #\n _ _ _   #\n| |_ _|  #\n|_|   |  #\n  |_ _|  #\n         #\n   _ _   #\n  |   |  #\n  |_ _|  #\n         #\n _ _ _ _ #\n|_|_|_|_|#\n|_|_|_|_|#\n|_|_|_|_|#\n|_|_|_|_|#\n   _ _   #\n _|   |_ #\n| |_ _| |#\n|_|   |_|#\n  |_ _|_|#\n0</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case 1: Yes\nCase 2: Yes\nCase 3: No\nCase 4: Yes</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2006+Asia+Regional+Xi-An&amp;source=1&amp;searchmode=source\"> 2006 Asia Regional Xi-An </a> ","type":"source","format":"html"}]}