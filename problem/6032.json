{"title":"Judicious Strategy","time_limit":1000,"memory_limit":128,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=6032","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=6032&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=6032","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=6032"},"statement":[{"title":"Problem Description","content":"Alice and Bob is now playing a game about strings.<br>There is a dictionary containing $n$ words (words might be same). Alice choose a lowercase English letter arbitrarily first, but this letter should appear in at least one of these $n$ words. Then Bob choose a lowercase English letter arbitrarily to add it before or after the letter Alice chose. So Bob gets a new string now. This new string should also be a substring (consecutive subsequence) of at least one strings in the dictionary. After that, it&apos;s Alice&apos;s turn. Alice should do the same thing, choosing a letter and add it before or after the current string, making a new string. At every moment, the string they made should always be a substring of at least one strings in the dictionary. The player who can&apos;t operate first lose the game and the other one win.<br>Besides, each player has a score. The score is calculated by the following rule:<br>If the string $S$ is now made, the current player will get $score(S)$ points. It means that Alice will score in the first round, then Bob, then Alice...<br>\\begin{eqnarray*}<br>score(S)=\\left[\\left(\\sum_{i=1}^{|S|}value(S_i)\\right)\\times\\max_{i=1}^{|S|}value(S_i)\\right]+occ(S)<br>\\end{eqnarray*}<br>where<br><br>   1.   $|S|$ means the length of $S$.<br>   2.   $value(c)$ represents the value of letter $c$. The score of letter ``a&apos;&apos; is 1, ``b&apos;&apos; is 2, ..., ``z&apos;&apos; is 26.<br>   3.   $occ(S)$ means the time that $S$ occurs as a substring in the dictionary, each word is counted just once.<br><br>Alice and Bob will play with best strategy. That is to say, they will consider to win first and then maximize their score, after that they will consider to minimize the score of others.<br>Please determine who will win the game, and report the final scores they will earn during the whole game.","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"The input contains several test cases, no more than 10 test cases.<br>In each test case, the first line contains an integer $n(1\\leq n\\leq 30)$, denoting the number of words in the dictionary.<br>In the next $n$ lines, each line contains a non-empty string $word_i$, denoting a word in the dictionary. The string is composed of lowercase English letters and its length will not exceed 30.","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each test case, output a string in the first line. If Alice will win ,output &apos;&apos;Alice&apos;&apos;, otherwise output &apos;&apos;Bob&apos;&apos;.<br>Then print two integers $A$ and $B$ in second line, denoting the final score of Alice and Bob.<br>","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\naba\nabac\n3\nartem\nnik\nmax</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Bob\n29 35\nAlice\n2403 1882</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2017%D6%D0%B9%FA%B4%F3%D1%A7%C9%FA%B3%CC%D0%F2%C9%E8%BC%C6%BE%BA%C8%FC+-+%C5%AE%C9%FA%D7%A8%B3%A1&amp;source=1&amp;searchmode=source\"> 2017&#x4E2D;&#x56FD;&#x5927;&#x5B66;&#x751F;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x7ADE;&#x8D5B; - &#x5973;&#x751F;&#x4E13;&#x573A; </a> ","type":"source","format":"html","require":["katex"]}]}