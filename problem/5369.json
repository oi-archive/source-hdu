{"title":"Game On the Tree","time_limit":4000,"memory_limit":64,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5369","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5369&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5369","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5369"},"statement":[{"title":"Problem Description","content":"Given a tree, a connected graph that contains $N$ vertexes and $N-1$ edges, you should control a virtual miner to get maximum values by walking from a vertex A and stopping at a vertex B.<br><br>On a tree, as we know, there is only one road between every two vertexes. Here, you are allowed to choose a vertex A (the value of A can not be 0) and a vertex B by yourself. Walking from A and stopping at B, you must collect all the values on the road. Each vertex has a value. Try to get values as large as you can. Remember that the miner you controlled, can never go back to any vertex he has passed.<br><br>However, there is a special way to calculate total values. Let&#x2019;s assume that the miner has passed $M$ vertexes from A to B. During the travel, the miner has successively collected $M$ values worths $W_{i}$ $(0 \\leq i &lt; M)$. Vertex A has a value worth $W_{M-1}$. The next vertex on the road has a value worth $W_{M-2}$ ...... At last, vertex B has a value worth $W_{0}$. The special rule gives you an integer $P$. The total value you collect is calculated by the formula $MAX = \\sum_{i = 0}^{m-1}(W_i \\times P^i)$.<br><br>It is guaranteed that $Wi$ $(0 \\leq i &lt; M)$ are less than $P$. The vertex A and B you choose can be same. But the value of A can not be 0. Output $MAX$ module $(10^9 + 7)$. Note that you need to make sure $MAX$ as large as possible but $NOT$ make sure the remainder as large as possible. And then, output value of each vertex (stating from vertex A) on the road in the best case.<br>","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"The first line contains an integer $T (1 \\leq T \\leq 200)$, indicating the number of test cases.<br>For each case, The first and second line contain two integers $N$ $( 1 \\leq N \\leq 10^4 )$ and $P$ $( 2 \\leq P \\leq 10^9)$, indicating the number of vertexes and the integer $P$.<br><br>Each of the following $N-1$ lines contains two integers $a$ and $b$ $(1 \\leq a, b \\leq N, a \\neq b)$, indicating that there is an edge connecting vertex $a$ and vertex $b$.<br><br>The following line contains $N$ integers $W_i$ $( 0 \\leq W_i &lt; P, \\sum W_i &gt; 0)$, the value of each vertex. It is guaranteed that at least one of $W_i$ not equal 0.<br><br>You can assume that sum of $N$ does not exceed $1.3 \\times 10^6$.","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each case, the first line outputs &quot;Case #$T$: $MAX$&quot;(without quotes). Here, $T$ is the index of test case (starting from 1) and $MAX$ is the maximum value of treasures the miner can collect module $(10^9 + 7)$.<br><br>The second line outputs the value of each vertex from vertex A to vertex B.<br>","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n\n8\n2\n1 2\n2 3\n3 4\n4 5\n2 6\n6 7\n7 8\n1 0 0 0 0 0 0 0\n\n9\n1000000000\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n1 8\n8 9\n1 2 0 2 0 2 0 2 0</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case #1: 16\n1 0 0 0 0\nCase #2: 999999356\n2 1 2 0</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Author","content":"UESTC","type":"source","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2015+Multi-University+Training+Contest+7&amp;source=1&amp;searchmode=source\"> 2015 Multi-University Training Contest 7 </a> ","type":"source","format":"html","require":["katex"]}]}