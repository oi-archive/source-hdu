{"title":"Simple Computers","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=1341","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=1341&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=1341","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=1341"},"statement":[{"title":"Problem Description","content":"You are to write an interpreter for a simple computer. This computer uses a processor with a small number of machine instructions. Furthermore, it is equipped with 32 byte of memory, one 8-bit accumulator (accu) and a 5-bit program counter (pc). The memory contains data as well as code, which is the usual von Neumann architecture. <br>The program counter holds the address of the instruction to be executed next. Each instruction has a length of 1 byte - the highest 3 bits define the type of instruction and the lowest 5 bits define an optional operand which is always a memory address (xxxxx). For instructions that don&apos;t need an operand the lowest 5 bits have no meaning (-----). Here is a list of the machine instructions and their semantics: <br><br>000xxxxx   STA x   store the value of the accu into memory byte x<br>001xxxxx   LDA x   load the value of memory byte x into the accu<br>010xxxxx   BEQ x   if the value of the accu is 0 load the value x into the pc<br>011-----   NOP     no operation<br>100-----   DEC     subtract 1 from the accu<br>101-----   INC     add 1 to the accu<br>110xxxxx   JMP x   load the value x into the pc<br>111-----   HLT     terminate program<br><br><br>In the beginning, program counter and accumulator are set to 0. After fetching an instruction but before its execution, the program counter is incremented. You can assume that programs will terminate.<br>","type":"description","format":"html"},{"title":"Input","content":"The input file contains several test cases. Each test case specifies the contents of the memory prior to execution of the program. Byte 0 through 31 are given on separate lines in binary representation. A byte is denoted by its highest-to-lowest bits. Input is terminated by EOF.<br>","type":"input_format","format":"html"},{"title":"Output","content":"For each test case, output on a line the value of the accumulator on termination in binary representation, again highest bits first.<br>","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">00111110\n10100000\n01010000\n11100000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00111111\n10000000\n00000010\n11000010\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n00000000\n11111111\n10001001</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">10000111</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=University+of+Ulm+Local+Contest+2000&amp;source=1&amp;searchmode=source\"> University of Ulm Local Contest 2000 </a> ","type":"source","format":"html"}]}