{"title":"Pattern String","time_limit":8000,"memory_limit":256,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5509","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5509&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5509","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5509"},"statement":[{"title":"Problem Description","content":"Using data compression technique, the long string ``ruiruiruiruiruirui&quot; can be compressed into ``(ruirui)3&quot; or ``(rui)6&quot;. To simplify the technique, multiple compressions are not allowed. For example, we <b>don&apos;t allow</b> to compress the string ``princessruiruiprincessruirui&quot; into ``(princess(rui)2)2&quot;.<br><br>Now for given string $S$ and $k$ patterns using the mentioned technique, we want to distinguish each pattern which is a prefix of $S$. We emphasize that a pattern as a string can be cyclic shifted. For example, a pattern ``abcd&quot; can be shifted into ``bcda&quot;, ``cdab&quot; or ``dabc&quot;.","type":"description","format":"html"},{"title":"Input","content":"The first line contains an integer $t~(1\\le t\\le 13)$ which is the number of test cases.<br><br>For each test case, the first line is the string $S$. The second line contains the integer $k(1\\le k\\le 10)$ and following $k$ lines list the patterns, labelled from $1$ to $k$.<br>The string $S$ and all patterns only contain lower-case letters, numbers and parentheses. Numbers of replication are positive integers no more than $2\\times 10^8$. The length of $S$ is no more than $11000$. The length of each pattern is no more than $11000$ as well. We guarantee that the actual length of each $T$ (the length of the original pattern without compression) would be smaller than the actual length of $S$ (the length of original $S$ without compression). The length of each substring given in parentheses is no more than $10$.","type":"input_format","format":"html"},{"title":"Output","content":"For each test case, output the sum of labels&apos; squares for patterns as the prefix of $S$.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">3\nz(rz)3r(rui)2cumt\n5\n(zr)4\nzrzrrui\nzr(zr)2z(r)2u\n(rz)3\n(zr)2z(r)2zr\n(ab)2aab(aba)3(ba)2(zhang)940712\n4\n(babaa)2(baa)2\n(aabab)2\n(ab)3\n(aba)2(ab)3a(ab)2(a)2b\n(a)100b(a)100c(a)100d\n1\n(a)100d(a)100c(a)100b</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case #1: 51\nCase #2: 21\nCase #3: 0\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>\n In the first test case, the string S is ``zrzrzrzrruiruicumt&quot;. The first pattern ``zrzrzrzr&quot; is a prefix of S. The third one ``zrzrzrzrru&quot; is a prefix of S as well. The fourth on can be shifted into ``zrzrzr&quot; and the fifth one can be shifted into ``zrzrzrzrr&quot;. The sum of squares is 1^2 + 3^2 + 4^2 + 5^2 = 51.\n</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2015ACM%2FICPC%D1%C7%D6%DE%C7%F8%C9%F2%D1%F4%D5%BE-%D6%D8%CF%D6%C8%FC%A3%A8%B8%D0%D0%BB%B6%AB%B1%B1%B4%F3%D1%A7%A3%A9&amp;source=1&amp;searchmode=source\"> 2015ACM/ICPC&#x4E9A;&#x6D32;&#x533A;&#x6C88;&#x9633;&#x7AD9;-&#x91CD;&#x73B0;&#x8D5B;&#xFF08;&#x611F;&#x8C22;&#x4E1C;&#x5317;&#x5927;&#x5B66;&#xFF09; </a> ","type":"source","format":"html"}]}