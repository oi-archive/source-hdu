{"title":"Krypton Factor","time_limit":1000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=1627","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=1627&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=1627","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=1627"},"statement":[{"title":"Problem Description","content":"You have been employed by the organisers of a Super Krypton Factor Contest in which contestants have very high mental and physical abilities. In one section of the contest the contestants are tested on their ability to recall a sequenace of characters which has been read to them by the Quiz Master. Many of the contestants are very good at recognising patterns. Therefore, in order to add some difficulty to this test, the organisers have decided that sequences containing certain types of repeated subsequences should not be used. However, they do not wish to remove all subsequences that are repeated, since in that case no single character could be repeated. This in itself would make the problem too easy for the contestants. Instead it is decided to eliminate all sequences containing an occurrence of two adjoining identical subsequences. Sequences containing such an occurrence will be called ``easy&apos;&apos;. Other sequences will be called ``hard&apos;&apos;. <br><br>For example, the sequence ABACBCBAD is easy, since it contains an adjoining repetition of the subsequence CB. Other examples of easy sequences are: <br><br>BB<br>ABCDACABCAB<br>ABCDABCD <br><br>Some examples of hard sequences are: <br><br>D<br>DC<br>ABDAB<br>CBABCBA <br>","type":"description","format":"html"},{"title":"Input","content":"In order to provide the Quiz Master with a potentially unlimited source of questions you are asked to write a program that will read input lines that contain integers n and L (in that order), where n &gt; 0 and L is in the range  , and for each input line prints out the nth hard sequence (composed of letters drawn from the first L letters in the alphabet), in increasing alphabetical order (alphabetical ordering here corresponds to the normal ordering encountered in a dictionary), followed (on the next line) by the length of that sequence. The first sequence in this ordering is A. You may assume that for given n and L there do exist at least n hard sequences. <br><br>For example, with L = 3, the first 7 hard sequences are: <br><br>A <br>AB <br>ABA <br>ABAC <br>ABACA <br>ABACAB <br>ABACABA <br>As each sequence is potentially very long, split it into groups of four (4) characters separated by a space. If there are more than 16 such groups, please start a new line for the 17th group. <br><br>Therefore, if the integers 7 and 3 appear on an input line, the output lines produced should be <br><br><br>ABAC ABA<br>7<br>Input is terminated by a line containing two zeroes. Your program may assume a maximum sequence length of 80.<br>","type":"input_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">30 3\n0 0</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">ABAC ABCA CBAB CABA CABC ACBA CABA\n28</div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=uva&amp;source=1&amp;searchmode=source\"> uva </a> ","type":"source","format":"html"}]}