{"title":"Robotic Class","time_limit":1000,"memory_limit":256,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=6893","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=6893&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=6893","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=6893"},"statement":[{"title":"Problem Description","content":"Baby volcano is now at a robotic class. In this class, babies are required to program a special control system of a robot. This control system has a real-valued control variable $x$, which captures the behavior of this robot. In addition, this control system could be abstracted as an acyclic directed graph, with $n$ node, the nodes are indexed from $1$ to $n$. In this graph, the node $n$ has no output edge, termed as the output node. Moreover, for each vertex $t,1\\leq t&lt;n$, there is a number $k_t$, a set of $integer$-$valued$ limits $a_{t,0}&lt;a_{t,1}&lt;a_{t,2}&lt;\\cdots&lt;a_{t,k_{t}-1}&lt;a_{t,k_t}:=+\\infty$, and a set of $integer$-$valued$ coefficients, bias and destinations $c_{t,0},b_{t,0},d_{t,0} ,c_{t,1},b_{t,1},d_{t,1},c_{t,2},b_{t,2},d_{t,2}\\cdots,c_{t,k_t},b_{t,k_t},d_{t,k_t}$. For every $t$ and $i, 0\\leq i\\leq k_t$, $-1\\leq c_{t,i}\\leq 1$.<br><br>To use this system to control the robot, the user follows the steps below:<br><br>1. Choose $x_0$ and initialize $x:=x_0$, then choose some node $s_0$ and set the currect node $t:=s_0$<br>2. If $t$ is the output node$(t=n)$, then output $x_{out}:=x$, else go to step 3.<br>3. The user finds the smallest $i$ such that $a_{t,i}\\geq x$(Note that $i$ always exists), then transform $x:=c_{t,i}\\times x+b_{t,i}$, and set $t:=d_{t,i}$, and go back to step 2.<br><br>Note that for every fixed $s_0$, the output value $x_{out}$ is a function with respect to the initial value $x_0\\in \\mathbb R$, we call this function $C_{s_0}(x_0)$.<br><br>To precisely control the robot, it is required that for every initial node $s_0$, $C_{s_0}(x_0)$ is continuous with respect to $x_0$.<br><br>A function $f(x),x\\in \\mathbb R$ is continuous with respect to $x$ iff <br>$$\\forall x\\in \\mathbb R,\\forall \\epsilon&gt;0,\\exists \\delta&gt;0,\\forall x&apos;\\in \\mathbb R, (|x-x&apos;|\\leq \\delta \\implies |f(x)-f(x&apos;)|\\leq \\epsilon)$$<br><br>You need to verify this requirement is satisfied or not. In other words, if for every initial node $s_0$, $C_{s_0}(x_0)$ is continuous with respect to $x_0$, you should output &apos;&apos;YES&apos;&apos;. If there exists some node $s^*$ such that $C_{s^*}(x_0)$ is not continuous, you should output &apos;&apos;NO&apos;&apos;.","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"In the first line there is one integer $T$, denotes the number of test cases.<br><br>The rest of input has $T$ part, each part corresponds to a test case.<br><br>For each part, in the first line there is a number $n$, denotes the number of nodes.<br><br>In the next $n-1$ lines, the $i$-th line starts with $k_i$, follows with $4k_i+3$ integers, they are $c_{i,0},b_{i,0},d_{i,0},a_{i,0},c_{i,1},b_{i,1},d_{i,1},a_{i,1},\\cdots, a_{i,k_i-1},c_{i,k_i},b_{i,k_i},d_{i,k_i}$.<br><br>It guarantees that $1\\leq T\\leq 100$,<br>and in a single test cases,<br>$1\\leq n\\leq 500$,<br>$1\\leq \\sum{k_i}\\leq 2000$,<br>$-1\\leq c_{i,j}\\leq 1$,<br>$-10^6\\leq b_{i,j}\\leq 10^6$,<br>$-10^9\\leq a_{i,j}\\leq 10^9$,<br>$i+1\\leq d_{i,j}\\leq n$.<br>And it guarantees that $a_{i,j-1}&lt;a_{i,j}$ for every $1\\leq j&lt; k_i$.","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each test case, you should firstly output &apos;&apos;Case #t: &apos;&apos;(without quotes), where $t$ is the index of this test case, then if for every initial node $s_0$, $C_{s_0}(x_0)$ is continuous with respect to $x_0$, you should output &apos;&apos;YES&apos;&apos;. If there exists some node $s^*$ such that $C_{s^*}(x_0)$ is not continuous, you should output &apos;&apos;NO&apos;&apos;.","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">3\n4\n1 1 1 2 -4 -1 -7 3\n0 -1 -2 4\n0 1 4 4\n4\n1 1 1 2 -4 -1 -7 3\n0 -1 -3 4\n0 1 4 4\n1</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case #1: YES\nCase #2: NO\nCase #3: YES</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2020%D6%D0%B9%FA%B4%F3%D1%A7%C9%FA%B3%CC%D0%F2%C9%E8%BC%C6%BE%BA%C8%FC%A3%A8CCPC%A3%A9+-+%CD%F8%C2%E7%D1%A1%B0%CE%C8%FC&amp;source=1&amp;searchmode=source\"> 2020&#x4E2D;&#x56FD;&#x5927;&#x5B66;&#x751F;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x7ADE;&#x8D5B;&#xFF08;CCPC&#xFF09; - &#x7F51;&#x7EDC;&#x9009;&#x62D4;&#x8D5B; </a> ","type":"source","format":"html","require":["katex"]}]}