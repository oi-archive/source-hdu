{"title":"Graph Theory","time_limit":1000,"memory_limit":128,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=6029","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=6029&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=6029","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=6029"},"statement":[{"title":"Problem Description","content":"Little Q loves playing with different kinds of graphs very much. One day he thought about an interesting category of graphs called ``Cool Graph&apos;&apos;, which are generated in the following way:<br>Let the set of vertices be {1, 2, 3, ..., $n$}. You have to consider every vertice from left to right (i.e. from vertice 2 to $n$). At vertice $i$, you must make one of the following two decisions:<br>(1) Add edges between this vertex and all the previous vertices (i.e. from vertex 1 to $i-1$).<br>(2) Not add any edge between this vertex and any of the previous vertices.<br>In the mathematical discipline of graph theory, a matching in a graph is a set of edges without common vertices. A perfect matching is a matching that each vertice is covered by an edge in the set.<br>Now Little Q is interested in checking whether a &apos;&apos;Cool Graph&apos;&apos; has perfect matching. Please write a program to help him.<br>","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"The first line of the input contains an integer $T(1\\leq T\\leq50)$, denoting the number of test cases.<br>In each test case, there is an integer $n(2\\leq n\\leq 100000)$ in the first line, denoting the number of vertices of the graph.<br>The following line contains $n-1$ integers $a_2,a_3,...,a_n(1\\leq a_i\\leq 2)$, denoting the decision on each vertice.","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each test case, output a string in the first line. If the graph has perfect matching, output &apos;&apos;Yes&apos;&apos;, otherwise output &apos;&apos;No&apos;&apos;.<br>","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">3\n2\n1\n2\n2\n4\n1 1 2</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Yes\nNo\nNo</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2017%D6%D0%B9%FA%B4%F3%D1%A7%C9%FA%B3%CC%D0%F2%C9%E8%BC%C6%BE%BA%C8%FC+-+%C5%AE%C9%FA%D7%A8%B3%A1&amp;source=1&amp;searchmode=source\"> 2017&#x4E2D;&#x56FD;&#x5927;&#x5B66;&#x751F;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x7ADE;&#x8D5B; - &#x5973;&#x751F;&#x4E13;&#x573A; </a> ","type":"source","format":"html","require":["katex"]}]}