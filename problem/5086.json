{"title":"Revenge of Segment Tree","time_limit":2000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5086","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5086&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5086","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5086"},"statement":[{"title":"Problem Description","content":"In computer science, a segment tree is a tree data structure for storing intervals, or segments. It allows querying which of the stored segments contain a given point. It is, in principle, a static structure; that is, its content cannot be modified once the structure is built. A similar data structure is the interval tree.<br>A segment tree for a set I of n intervals uses O(n log n) storage and can be built in O(n log n) time. Segment trees support searching for all the intervals that contain a query point in O(log n + k), k being the number of retrieved intervals or segments.<br>---Wikipedia<br><br>Today, Segment Tree takes revenge on you. As Segment Tree can answer the sum query of a interval sequence easily, your task is calculating the sum of the sum of all continuous sub-sequences of a given number sequence.","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"The first line contains a single integer T, indicating the number of test cases. <br><br>Each test case begins with an integer N, indicating the length of the sequence. Then N integer Ai follows, indicating the sequence.<br><br>[Technical Specification]<br>1. 1 &lt;= T &lt;= 10<br>2. 1 &lt;= N &lt;= 447 000<br>3. 0 &lt;= Ai &lt;= 1 000 000 000","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each test case, output the answer mod 1 000 000 007.","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n1\n2\n3\n1 2 3</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n20\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>For the second test case, all continuous sub-sequences are [1], [2], [3], [1, 2], [2, 3] and [1, 2, 3]. So the sum of the sum of the sub-sequences is 1 + 2 + 3 + 3 + 5 + 6 = 20.\nHuge input, faster I/O method is recommended. And as N is rather big, too straightforward algorithm (for example, O(N^2)) will lead Time Limit Exceeded.\nAnd one more little helpful hint, be careful about the overflow of int.</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=BestCoder+Round+%2316&amp;source=1&amp;searchmode=source\"> BestCoder Round #16 </a> ","type":"source","format":"html","require":["katex"]}]}