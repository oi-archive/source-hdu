{"title":"BWT","time_limit":6000,"memory_limit":32,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=4644","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=4644&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=4644","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=4644"},"statement":[{"title":"Problem Description","content":"When the problem to match S string in T string is mentioned, people always put KMP, Aho-Corasick and Suffixarray forward. But Mr Liu tells Canoe that there is an algorithm called Burrows&#xFFFD;CWheeler Transform(BWT) which is quite amazing and high-efficiency to solve the problem.  <br>But how does BWT work to solve the matching S-in-T problem? Mr Liu tells Canoe the firstly three steps of it.<br>Firstly, we append the &#xFFFD;&#xFFFD;$&#xFFFD;&#xFFFD; to the end of T and for convenience, we still call the new string T. And then for every suffix of T string which starts from i, we append the prefix of T string which ends at (i &#xFFFD;C 1) to its end. Secondly, we sort these new strings by the dictionary order. And we call the matrix formed by these sorted strings Burrows Wheeler Matrix. Thirdly, we pick characters of the last column to get a new string. And we call the string of the last column BWT(T). You can get more information from the example below.<br><br><center><img style=\"max-width:100%;\" src=\"../../data/images/C459-1002-1.jpg\"></center> <br><br>Then Mr Liu tells Canoe that we only need to save the BWT(T) to solve the matching problem. But how and can it? Mr Liu smiles and says yes. We can find whether S strings like &#xFFFD;&#xFFFD;aac&#xFFFD;&#xFFFD; are substring of T string like &#xFFFD;&#xFFFD;acaacg&#xFFFD;&#xFFFD; or not only knowing the BWT(T)! What an amazing algorithm BWT is! But Canoe is puzzled by the tricky method of matching S strings in T string. Would you please help Canoe to find the method of it? Given BWT(T) and S string, can you help Canoe to figure out whether S string is a substring of string T or not?<br>","type":"description","format":"html"},{"title":"Input","content":"There are multiple test cases.<br>First Line: the BWT(T) string (1 &lt;= length(BWT(T)) &lt;= 100086). <br>Second Line: an integer n ( 1 &lt;=n &lt;= 10086) which is the number of S strings. <br>Then n lines comes. <br>There is a S string (n * length(S) will less than 2000000, and all characters of S are lowercase ) in every line.<br>","type":"input_format","format":"html"},{"title":"Output","content":"For every S, if S string is substring of T string, then put out &#xFFFD;&#xFFFD;YES&#xFFFD;&#xFFFD; in a line. If S string is not a substring of T string, then put out &#xFFFD;&#xFFFD;NO&#xFFFD;&#xFFFD; in a line.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">gc$aaac\n2\naac\ngc</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">YES   \nNO\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>\nA naive method will not be accepted.\n</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2013+Multi-University+Training+Contest+5&amp;source=1&amp;searchmode=source\"> 2013 Multi-University Training Contest 5 </a> ","type":"source","format":"html"}]}