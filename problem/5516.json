{"title":"Chessboard","time_limit":10000,"memory_limit":128,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5516","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5516&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5516","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5516"},"statement":[{"title":"Problem Description","content":"Ruirui and Doc are playing an interesting game on a chessboard with $n$ rows and $m$ columns. The rows are numbered from $1$ to $n$ from top to bottom, and the columns are numbered from $1$ to $m$ from left to right. There are some broken grids on the chessboards, which a chess cannot move in. Firstly, Doc gives Ruirui a sequence of commands, each command is of one of four following forms:<br><br>$\\cdot$<b>Move Up</b>: moving from grid $(x,y)$ to grid $(x-1,y)$;<br>$\\cdot$<b>Move Down</b>: moving from grid $(x,y)$ to grid $(x+1,y)$;<br>$\\cdot$<b>Move Left</b>: moving from grid $(x,y)$ to grid $(x,y-1)$;<br>$\\cdot$<b>Move Right</b>: moving from grid $(x,y)$ to grid $(x,y+1)$.<br><br>Then Ruirui puts a single chess on a grid of the chessboard<br><br>Ruirui will move the chess by Doc&apos;s commands in sequence. If the chess will be out of boarder or in a broken grid after a move, she omits this command and \\textbf{go on} to consider the next one until the last command. Now Ruirui wants to find the grid which the chess will be in the end.","type":"description","format":"html","require":["katex"]},{"title":"Input","content":"The first line contains a single integer $T~(1\\le T\\le 10)$, which indicates the number of test cases. Then $T$ test cases follow.<br><br>For each test case, the first line contains $4$ integers $n,m,o$ and $l~(1\\le n,m,o,l\\le 1000)$ representing the number of rows, the number of columns, the number of broken grids and the length of Doc&apos;s command sequence.<br><br>Next $o$ lines, each line contains two integers $i$ and $j$ describing the position of broken grid.<br><br>The last line contains Doc&apos;s command sequence, it&apos;s a string of length $l$ with each character being one of $\\{``U&quot;,``D&quot;,``L&quot;,``R&quot;\\}$ denoting Move Up, Move Down, Move Left and Move Right respectively.","type":"input_format","format":"html","require":["katex"]},{"title":"Output","content":"For each test case, for each unbroken grid $(i,j)$, assume a chess started at $(i,j)$ would stop at $\\left(x(i,j),y(i,j)\\right)$, output the sum of $\\left(i-x(i,j)\\right)^2 + \\left(j-y(i,j)\\right)^2$ (over all unbroken $(i,j)$).","type":"output_format","format":"html","require":["katex"]},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n5 5 5 5\n2 3\n5 1\n5 5\n4 4\n3 5\nRRRLR\n10 10 10 10\n2 6\n3 8\n7 2\n5 3\n4 3\n3 2\n7 9\n6 8\n9 10\n10 6\nDLLDRRURLR</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">Case #1: 49\nCase #2: 241</div></pre>","type":"example","format":"html","require":["katex"]},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2015ACM%2FICPC%D1%C7%D6%DE%C7%F8%C9%F2%D1%F4%D5%BE-%D6%D8%CF%D6%C8%FC%A3%A8%B8%D0%D0%BB%B6%AB%B1%B1%B4%F3%D1%A7%A3%A9&amp;source=1&amp;searchmode=source\"> 2015ACM/ICPC&#x4E9A;&#x6D32;&#x533A;&#x6C88;&#x9633;&#x7AD9;-&#x91CD;&#x73B0;&#x8D5B;&#xFF08;&#x611F;&#x8C22;&#x4E1C;&#x5317;&#x5927;&#x5B66;&#xFF09; </a> ","type":"source","format":"html","require":["katex"]}]}