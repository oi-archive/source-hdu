{"title":"Matching in a Tree","time_limit":10000,"memory_limit":320,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=6190","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=6190&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=6190","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=6190"},"statement":[{"title":"Problem Description","content":"Lizi studied Trie in Data Structure class. He learned that Trie is a rooted tree to store some strings. There is a character on each edge of a Trie. In this problem, valid characters are only lowercase Latin letters. <br><br>There is a Trie T. At the beginning, the Trie only has a root, which is labeled 0.<br><br>Now you also have a string S ( At the beginning, it&apos;s a empty string.)<br><br>We use $P_i$ to denote the string concatenated with characters on the path from the root to node labeled i.<br><br>We use $Q_i$ to denote the prefix of the string S, which length is i.<br><br>Now give you m operations of the following forms.<br><br>ADD u v c <br><br>Insert a node labeled v. The node&apos;s father is u, and the character between the node and its father is c. Assume the label of the node is exactly the max label of the tree&apos;s node +1 . <br><br>ASK p1 p2 t <br><br>Ask whether there exists a string $Q_l$($0 \\le p1\\le l \\le p2 \\le Length(S)$ ), which is meanwhile a substring of $P_t$. Output &apos;yes&apos; or &apos;no&apos;.<br><br>INS p1 p2<br><br>Add a charcter c at the end of the string. Unluckly, we only know the character is between p1 and p2. That is to say, $&apos;a&apos;\\le p1\\le c\\le p2\\le &apos;z&apos;$. <br>","type":"description","format":"html"},{"title":"Input","content":"The input contains multiple test cases. <br><br>There are at most 7 test cases.<br><br>For each test case, the first line contains one integer m($1\\leq m \\leq 10^6$). <br>Then next m lines contain operations ADD u v c , ASK p1 p2 t or INS p1 p2.<br><br>At the end, the length of the string S is at most $10^3$. ","type":"input_format","format":"html"},{"title":"Output","content":"For each operation 2, if the answer is yes, print &apos;yes&apos;, otherwise, print &apos;no&apos;.<br><br>Since the output may be very large, denote $q$ as the number of operation 2, and $f_i(1\\leq i\\leq q)$ as the answer of the $i$-th query(regard &apos;yes&apos; as $1$ and &apos;no&apos; as $2$). For each test case, print a single line containing an integer, denoting the following thing:<br><br>\\begin{eqnarray*}<br>\\left(\\sum_{i=1}^q 233^{q-i}f_i\\right)\\bmod 1000000007<br>\\end{eqnarray*}<br><br>","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">7\nADD 0 1 a\nADD 0 2 c\nINS a a\nASK 1 1 1\nINS a c\nASK 1 2 1\nASK 2 2 2</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">54524\n\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>\nIf you need a larger stack size, \nplease use #pragma comment(linker, &quot;/STACK:102400000,102400000&quot;) and submit your solution using C++.\n\n</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=2017ACM%2FICPC%B9%E3%CE%F7%D1%FB%C7%EB%C8%FC-%D6%D8%CF%D6%C8%FC%A3%A8%B8%D0%D0%BB%B9%E3%CE%F7%B4%F3%D1%A7%A3%A9&amp;source=1&amp;searchmode=source\"> 2017ACM/ICPC&#x5E7F;&#x897F;&#x9080;&#x8BF7;&#x8D5B;-&#x91CD;&#x73B0;&#x8D5B;&#xFF08;&#x611F;&#x8C22;&#x5E7F;&#x897F;&#x5927;&#x5B66;&#xFF09; </a> ","type":"source","format":"html"}]}