{"title":"Kblack loves flag","time_limit":1000,"memory_limit":64,"operation":{"submit":"http://acm.hdu.edu.cn/submit.php?pid=5995","submissions":"http://acm.hdu.edu.cn/status.php?first=&pid=5995&user=&lang=0&status=0","statistics":"http://acm.hdu.edu.cn/statistic.php?pid=5995","discussion":"http://acm.hdu.edu.cn/discuss/problem/list.php?problemid=5995"},"statement":[{"title":"Problem Description","content":"Kblack loves flags, so he has infinite flags in his pocket.<br><br>One day, Kblack is given an $n*m$ chessboard and he decides to plant flags on the chessboard where the position of each flag is described as a coordinate $\\left(x,y \\right)$, which means that the flag is planted at the $x$th line of the $y$th row.<br><br>After planting the flags, Kblack feels sorry for those lines and rows that have no flags planted on, so he would like to know that how many lines and rows there are that have no flags planted on.<br><br>Well, Kblack, unlike you, has a date tonight, so he leaves the problem to you. please resolve the problem for him.","type":"description","format":"html"},{"title":"Input","content":"You should generate the input data in your programme.<br><br>We have a private variable $x$ in the generation,which equals to $seed$ initially.When you call for a random number ranged from $[l,r]$,the generation will trans $x$ into $\\left(50268147x+6082187\\right)\\ mod\\ 100000007$.And then,it will return $x\\ mod\\ \\left(r-l+1 \\right)+l$.<br><br>The first line contains a single integer $T$ refers to the number of testcases.<br><br>For each testcase,there is a single line contains 4 integers $n, m, k, seed$.<br><br>Then,you need to generate the $k$ flags&apos; coordinates.<br><br>For $i=1\\cdots k$,firstly generate a random number in the range of $\\left[1,n \\right]$.Then generate a random number in the range of $\\left[1,m \\right]$.<br><br>You can also copy the following code and run &quot;Init&quot; to generate the x[],y[] (only for C++ players).<br><br>&lt;pre&gt;<br>const int _K=50268147,_B=6082187,_P=100000007;<br>int _X;<br>inline int get_rand(int _l,int _r){<br>&#xA0;&#xA0;_X=((long long)_K*_X+_B)%_P;<br>&#xA0;&#xA0;return _X%(_r-_l+1)+_l;<br>}<br>int n,m,k,seed;<br>int x[1000001],y[1000001];<br>void Init(){<br>&#xA0;&#xA0;scanf(&quot;%d%d%d%d&quot;,&amp;n,&amp;m,&amp;k,&amp;seed);<br>&#xA0;&#xA0;_X=seed;<br>&#xA0;&#xA0;for (int i=1;i&lt;=k;++i)<br>&#xA0;&#xA0;&#xA0;&#xA0;x[i]=get_rand(1,n),<br>&#xA0;&#xA0;&#xA0;&#xA0;y[i]=get_rand(1,m);<br>}<br>&lt;/pre&gt;<br><br>$\\left(1\\leq T\\leq 7 \\right)$,$\\left(1\\leq n,m\\leq 1000000 \\right)$,$\\left(0\\leq k\\leq 1000000 \\right)$,$\\left(0\\leq seed&lt;100000007 \\right)$","type":"input_format","format":"html"},{"title":"Output","content":"For each testcase,print a single line contained two integers,which respectively represent the number of lines and rows that have no flags planted.","type":"output_format","format":"html"},{"title":"Sample Input","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2\n4 2 3 233\n3 4 4 2333</div></pre>","type":"example","format":"html"},{"title":"Sample Output","content":"<pre><div style=\"font-family:Courier New,Courier,monospace;\">2 1\n1 0\n\n<div style=\"font-family:Times New Roman;font-size:14px;background-color:F4FBFF;border:#B7CBFF 1px dashed;padding:6px\"><div style=\"font-family:Arial;font-weight:bold;color:#7CA9ED;border-bottom:#B7CBFF 1px dashed\"><i>Hint</i></div>\nthe flags in the first case:$\\left(4,2\\right)$,$\\left(1,2\\right)$,$\\left(1,2\\right)$\n\nthe flags in the second case:$\\left(2,1 \\right)$,$\\left(2,3\\right)$,$\\left(3,4\\right)$,$\\left(3,2\\right)$\n\n</div><i style=\"font-size:1px\"> </i></div></pre>","type":"example","format":"html"},{"title":"Source","content":" <a href=\"/search.php?field=problem&amp;key=BestCoder+Round+%2390&amp;source=1&amp;searchmode=source\"> BestCoder Round #90 </a> ","type":"source","format":"html"}]}